Input: 
1. Select types of match (ODI/T20/...). ✅
2. Select a team for batting. ✅
3. No. of overs to be played. ✅
4. Enter run ball by ball with the runs scored on that ball(runs/wide-ball/ wicket/No-ball) ✅


Output: 
Design a cricket scoreboard program that will show the following results: 
1. Announcement of winning team. ✅
2. Score of both the team- with total no of balls played and wickets by each team. ✅
3. Score of each player ✅
4. Average run/over(display after completion of match). ✅
5. Display no. of 6’s 4’s , wide-ball, wicket, no-ball after completion of every over and also overall statistics after completion of match. ✅


Note: 
1. Code should include all the Object-Oriented concepts: 
    a. Class and Object: Use array of Objects, constructor ✅
    b. Inheritance: IS-A relationship between class.[Dynamic Method Dispatch-if possible] ✅
    c. Encapsulation: Class bound with access specifier(public/private/protected/default) ✅
    d. Polymorphism: Method overloading and Method Overriding ✅
    e. Abstraction: Implement Abstract class with abstract method and also implement interface in java. ✅
    f. Keyword: use static, this, final ✅
    g. Exception Handling: Handle runtime error through custom exception. 

2. Number of balls per over and number of players in each team are fix. ✅
3. Wide ball: 1 extra ball and 1 run ✅
4. No ball: 1 extra ball and free-hit ✅
5. Make sure your code is readable and maintainable and preferably object oriented. It 
should be modular and extensible, to add new features if needed. ✅


This is the bare minimum solution which is expected for the problem.  

You can add some more features once you are done with these, like maintaining a bowler’s 
record (total overs bowled, runs conceded, wickets taken, maiden overs, etc.). Total team 
extras, batsman strike rates, etc. can be added too. But these are "good to have" features, 
please try to complete the bare minimum first.  
